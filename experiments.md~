# LIFT: Deduced BGPs of queries executed in isolation

In this page, we present LIFT's deduced BGPs using as input (1) traces of queries in http://client.linkeddatafragments.org, each executed one by one (2) real log of DBpedia LDF server, taken from USEWOD.

**Summary**


1. [**Deduced BGPs per query**](https://github.com/coumbaya/lift/blob/master/experiments.md#deduced-bgps-per-query)

2.  [**Top 15 most frequent deduced bgps**](https://github.com/coumbaya/lift/blob/master/experiments.md#top-15-most-frequent-deduced-bgps)

3.  [**Recall and precision plots**](https://github.com/coumbaya/lift/blob/master/experiments.md#recall-and-precision-plots)

4.   [**Appendix: general information**](https://github.com/coumbaya/lift/blob/master/experiments.md#general-dataset-information)
   * [Executed queries per dataset](https://github.com/coumbaya/lift/blob/master/experiments.md#executed-queries-per-dataset)
   * [IRI prefixes to authorities](https://github.com/coumbaya/lift/blob/master/experiments.md#iri-prefixes-to-authorities)


## Deduced bgps per query

Next, we present deduced BGPs of LIFT as well as precision recall of joins per query, as presented in http://client.linkeddatafragments.org/, each executed in isolation.

| ID  | Query             | Deduced BGPs                       | Recall of joins | Precision of joins |
| ----|:-----------------:|:----------------------------------:| ----------------|:------------------:|
| Q1  | SELECT ?movie ?title ?name WHERE { \   ?movie dbpedia-owl:starring ?actor . (tp1) \   ?actor rdfs:label "Brad Pitt"@en . (tp2) \   ?movie rdfs:label ?title . (tp3) \   ?movie dbpedia-owl:director  director . (tp4) \   ?director rdfs:label ?name . (tp5) \      FILTER LANGMATCHES(LANG(?title), "EN") \      FILTER LANGMATCHES(LANG(?name), "EN") }  | BGP_1 {   (tp2):    ?s1    rdfs:label    "Brad Pitt"@en  (tp1):    ?s2     dbpedia:starring     ?s1 (tp3):    ?s1     rdfs:label     ?o3 (tp4):    ?s1   dbpedia-owl:director     ?o4 (tp5):    ?o4    rdfs:label     ?o5 } |    1      |  1    |
| Q2  | SELECT ?title ?classification WHERE { ?author foaf:name "Anne De Paepe" . (tp1) \   publication dc:creator ?author . (tp2)  \   ?publication dc:title ?title . (tp3) \   ?publication ugent-biblio:classification  ?classification .   (tp4) } | BGP_1{  (tp1):   ?s1     foaf:name     "Anne De Paepe"   (tp2):   ?s2     dcterms:creator  ?s1  (tp4):   ?s2     ugent:classification    ?o3 (tp3):   ?s2      dctitle:title     ?o4  } | 1   |  1  |
| Q3  | SELECT DISTINCT ?entity WHERE { \   ?entity a dbpedia-owl:Airport . (tp1) \   ?entity dbpprop:cityServed dbpedia:Italy  . (tp2)  }  | BGP_1{  (tp2):   ?s1     dbpprop:cityServed      dbpedia:Italy  (tp1_equiv):  ?s1    rdf:type      dbpedia-owl:Airport }  | 1 | 1 |
| Q4  |  ?city  rdf:type dbpclass:AncientCities . (tp1) \ ?city dbpedia-owl:populationTotal ?popTotal . (tp2) \      OPTIONAL {  ?city dbpedia-owl:populationMetro ?popMetro . (tp3) }  \   FILTER (?popTotal > 50000) }  \     ORDER BY DESC(?popTotal)   | BGP_1{  (tp1):   ?s1      rdf:type      dbpclass:AncientCities  (tp2):   ?s1     dbpedia-owl:populationTotal      ?o2  (tp3):   ?s1     dbpedia-owl:populationMetro     ?o3 } | 1  | 1 |
| Q5  | SELECT ?name ?deathDate WHERE { \   ?person a dbpedia-owl:Artist . (tp1)  ?person   rdfs:label ?name . (tp2) \   ?person dbpedia-owl:birthPlace  ?place . (tp3) \   ?place rdfs:label "York"@en . (tp4) \      FILTER LANGMATCHES(LANG(?name),  "EN") \      OPTIONAL { \   ?person dbpprop:dateOfDeath ?deathDate.  (tp5)  }  } | BGP_1{  (tp4):  ?s1     rdf:label      "York"@en  (tp3):  ?s2    dbpedia-owl:birthPlace   ?s1  (tp1):  ?s2   rdf:type  dbpedia-owl:Artist  (tp2):  ?s2  rdf:label     ?o4  (tp5):  ?s2   dbpprop:dateOfDeath      ?o5  } | 1 | 1 |
| Q6  | CONSTRUCT  { \   ?artist a dbpedia-owl:Artist.  ?artist dbpedia-owl:birthDate ?date.  }    WHERE { \   ?artist dbpedia-owl:influencedBy dbpedia:Pablo_Picasso . (tp1) \   ?artist a dbpedia-owl:Artist . (tp2) \   ?artist dbpedia-owl:birthDate ?date . (tp3)   } | BGP_1{   (tp1):    ?s1  dbpedia-owl:influencedBy      dbpedia:Pablo_Picasso   (tp2_equiv):   ?s1    rdf:type      dbpedia-owl:Artist  (tp3):    ?s1    dbpedia-owl:birthDate       ?o3  }  | 1 | 1 |
| Q7  | SELECT DISTINCT ?book ?author WHERE { \   ?book rdf:type dbpedia-owl:Book . (tp1) \   ?book dbpedia-owl:author ?author. (tp2)  } \    LIMIT 100 |  BGP_1{  (tp1):   ?s1     rdf:type     dbpedia-owl:Book   (tp2):   ?s1   dbpedia-owl:author     ?o2   }   BGP_2{   (tp2'_a):   ?s1   dbpedia-owl:author   ?o1  (tp2'_b):   ?s1    dbpedia-owl:author     ?o2  }  |  1 | 0,5 |
| Q8  | SELECT ?award WHERE { \   ?award a dbpedia-owl:Award . (tp1) \   ?award dbpprop:country ?language . (tp2) \   ?language dbpedia-owl:language dbpedia:Dutch_language . (tp3)  } |  |  1 |  0,67  |
| Q9  | SELECT DISTINCT ?artist ?band WHERE { \   {dbpedia:Queen_(band) dbpedia-owl:bandMember ?artist . (tp1) } \   UNION \   {  dbpedia:Queen_(band)   dbpedia-owl:formerBandMember ?artist . (tp2)  } \   ?artist dbpedia-owl:associatedBand ?band . (tp3) } |  BGP_1{  (tp1):   dbpedia:Queen_(band)    dbpedia-owl:bandMember  ?o1   (tp3):   ?o1       dbpedia-owl:associatedBand        ?o2   }   BGP_2{  (tp2):  dbpedia:Queen_(band)   dbpedia-owl:bandMember  ?o1   (tp3):  ?o1     dbpedia-owl:formerBandMember   ?o2  }  |   1  |  1 |
| Q10 | SELECT DISTINCT ?performer ?name WHERE { \   ?work dbpedia-owl:writer dbpedia:Michael_Jackson . (tp1) \   ?work dbpedia-owl:musicalArtist ?performer . (tp2) \     OPTIONAL  {  ?performer rdfs:label ?name.  (tp3) \      FILTER LANGMATCHES(LANG(?name), "EN")  }  }   |  BGP_1{  (tp1):     ?s1   dbpedia-owl:writer    dbpedia:Michael_Jackson   (tp2):     ?s1  dbpedia-owl:musicalArtist     ?o2   (tp3'_a):    ?s1    rdfs:label       ?o3  tp3):     ?o2    rdfs:label       ?o4  }  BGP_2{   (tp2'_a):     ?s1 dbpedia-owl:musicalArtist     ?o1
 (tp3'_b):    ?s1   rdfs:label       ?o2  }   |  1 | 1 |
| Q11 | SELECT ?software ?company WHERE { \   ?software dbpedia-owl:developer ?company . (tp1) ?company dbpedia-owl:locationCountry ?country . (tp2) \   ?country rdfs:label "Belgium"@en .  (tp3) }   | BGP_1{  (tp3):    ?s1    rdfs:label     "Belgium"@en  (tp2):    ?s2    dbpedia-owl:locationCountry    ?s1  (tp1):    ?s3    dbpedia-owl:developer    ?s2 }   |  1 | 1 |
| Q12 | SELECT ?person WHERE { \   ?person a yago:Carpenters . (tp1) \   ?person a yago:PeopleExecutedByCrucifixion . (tp2)  } |     |        |     |
| Q13 | SELECT ?actor ?cause WHERE { \   ?actor dbpedia-owl:deathCause ?cause . (tp1) \   ?actor dc:subject dbpedia-cat:American_male_film_actors  (tp2) } |  BGP_1{  (tp2_equiv):    ?s1  rdf:type     dbpclass:PeopleExecutedByCrucifixion  (tp1_equiv):   ?s1  rdf:type   dbpclass:Carpenters     }    BGP_2{     (tp2'_a):    ?s1   rdf:type     dbpclass:Carpenters   (tp1'_a):   ?s1    rdf:type   dbpclass:Carpenters    }   | 1 | 0,5 |
| Q14 | SELECT ?dessert ?fruit WHERE { \   ?dessert dbpedia-owl:type dbpedia:Dessert. (tp1) \   ?dessert dbpedia-owl:ingredient ?fruit . (tp2) \   ?fruit dbpedia-owl:kingdom dbpedia:Plant . (tp3) }    BGP_1{ (tp1):    ?s1     dbpedia-owl:type      dbpedia:Dessert  (tp2):    ?s1     dbpedia-owl:ingredient    ?o2  (tp3):  ?o2   dbpedia-owl:kingdom     dbpedia:Plant  }  BGP_2{ (tp1'_a):  ?s1     dbpedia-owl:ingredient    ?o1  (tp2'_a):  ?s1   dbpedia-owl:ingredient    ?o2   (tp3'_a):  ?s1 dbpedia-owl:kingdom     dbpedia:Plant (tp3'_b):  ?o2   dbpedia-owl:kingdom     dbpedia:Plant }   | 1 | 0,4 |
| Q15 | SELECT DISTINCT ?device WHERE { \   dbpedia:Raspberry_Pi dbpprop:os ?operatingSystem . (tp1) \   ?device a dbpedia-owl:Device . (tp2) \   ?device  dbpprop:os ?operatingSystem .  (tp3) \      FILTER (!(?device = dbpedia:Raspberry_Pi))  } |  BGP_1{   (tp1):   dbpedia:Raspberry_Pi     dbpprop:os      ?o1   (tp3):   ?s2      dbpprop:os      ?o1    (tp2_equiv):  ?s2     rdf:type      dbpedia-owl:Device  }   | 1 | 1 |
| Q16 | SELECT DISTINCT ?entity ?event WHERE { \   ?entity a dbpedia-owl:Event . (tp1) \   ?entity  rdfs:label ?event . (tp2) \   ?entity ?predicate dbpedia.org:Trentino . (tp3) \   FILTER(langMatches(lang(?event), "EN"))  } | BGP_1{   (tp3):    ?s1    ?p1     dbpedia:Trentino   (tp1_equiv):   ?s1     rdf:type         dbpedia-owl:Event   (tp2):     ?s1    rdfs:label      ?o3  } |  1  |  1  |
| Q17 | SELECT ?s WHERE { \   ?s a rdfs:Class . (tp1) \   ?s rdfs:subClassOf dcat:Dataset . (tp2)  }  | BGP_1{  (tp2):    ?s1   rdfs: subClassOf     dcat:Dataset   (tp1_equiv):   ?s1      rdf:type    rdfs:Class  }  | 1 | 1 |
 Q18  | SELECT distinct ?ontology ?prefix WHERE { \   ?ontology a owl:Ontology . (tp1) \   ?ontology vann:preferredNamespacePrefix ?prefix . (tp2) \   ?ontology  dc:creator ?creator . (tp3) \   ?creator foaf:name "Pieter Colpaert" . (tp4)  } \   LIMIT 100  |  BGP_1{   (tp4):    ?s1   foaf:name     "Pieter Colpaert"  (tp3):    ?s2   dc:creator     ?s1   (tp1_equiv):   ?s2  rdf:type     owl:Ontology   (tp2):   ?s2    vann:preferredNamespacePrefix     ?o4  }  | 1 | 1 |
| Q19 | SELECT ?titleEng ?title WHERE { \   ?movie dbpprop:starring ?actor . (tp1) \   ?actor rdfs:label "Natalie Portman"@en  . (tp2) \   ?movie rdfs:label ?titleEng . (tp3) \   ?movie rdfs:label ?title . (tp4) \      FILTER LANGMATCHES(LANG(?titleEng), "EN") \      FILTER (!LANGMATCHES(LANG(?title), "EN")) }  | BGP_1{  (tp2):    ?s1     rdfs:label   "Natalie Portman"@en  (tp1):    ?s2    dbpedia:starring     ?s1  (tp3 MERGED tp4):     ?s2  rdfs:label  ?o3   }  | 0,33 | 0,5 |
| Q20 | SELECT ?indDish ?belDish ?ingredient  WHERE { \   ?indDish a dbpedia-owl:Food . (tp1)  ?indDish dbpedia-owl:origin dbpedia:India . (tp2) \   ?indDish dbpedia-owl:ingredient ?ingredient . (tp3) \   ?belDish a dbpedia-owl:Food . (tp4) \   ?belDish dbpedia-owl:origin dbpedia:Belgium . (tp5) \   ?belDish dbpedia-owl:ingredient ?ingredient . (tp6)  }  |    |          |       |
| Q21 | SELECT DISTINCT ?person WHERE { \   dbpedia:Jesus dc:subject ?common . (tp1) \   ?person a foaf:Person . (tp2) \   ?person dc:subject ?common. (tp3)  } \  LIMIT 1000  | BGP_1{  (tp1):    dbpedia :Jesus    dc:subject     ?o1  (tp3):    ?s2    dc:subject     ?injectobj(tp1)  (tp2_equiv):   ?s2      rdf:type      foaf:Person   }   BGP_2{ (tp2'_a):   ?s1  rdf:type      foaf:Person     (tp2'_b):   ?s1     rdf:type      foaf:Person   } | 1 | 0,67 |
| Q22 | SELECT ?place ?relation WHERE { \   ?place rdf:type dbpedia-owl:Settlement . (tp1) \   ?place ?relation dbpedia:Barack_Obama . (tp2)  } | BGP_1{  (tp2):    ?s1   ?p1  dbpedia :Barack_Obam  (tp1):     ?s1    rdf:type       dbpedia-owl:Settleme   } | 1 | 1 |
| Q23 | SELECT ?jansen ?janssen ?title { \   ?publication dc:creator ?creator . (tp1) \   ?creator foaf:givenname ?jansen . (tp2) \   ?creator foaf:surname "Jansen" . (tp3) \   ?publication dc:creator ?name . (tp4) ?name foaf:givenname ?janssen . (tp5) \   ?name foaf:surname "Janssen" . (tp6) \   ?publication dc:title ?title . (tp7) }  |  BGP_1{  (tp3):   ?s1    foaf:surname     Jansen  (tp2):    ?s1    foaf:givenname    ?o2 (tp1):    ?s3   dc:creator    ?s1 (tp6'_a):   ?s1     foaf:surname      "Janssen"  (tp7):    ?s3   dc:title      ?o5  (tp4):    ?s3      dc:creator    ?o6 (tp5):    ?o6     foaf:givenname     ?o7 (tp4'_a):    ?s3     dc:creator    ?o8 (tp6):    ?o6    foaf:surname     "Janssen" } | 1 | 0,75 |
| Q24 | SELECT ?clubName ?playerName WHERE { \   ?club a dbpedia-owl:SoccerClub . (tp1) \   ?club  dbpedia-owl:ground ?city . (tp2) \   ?club  rdfs:label ?clubName . (tp3) \   ?player dbpedia-owl:team ?club . (tp4) \   ?player dbpedia-owl:birthPlace ?city . (tp5) \   ?player rdfs:label ?playerName . (tp6) \   ?city dbpedia-owl:country dbpedia:Spain. (tp7) \      FILTER LANGMATCHES(LANG(?clubName), "EN") \      FILTER LANGMATCHES(LANG(?playerName), "EN") }         |    |           |   |
| Q25 | SELECT DISTINCT ?coauthorName { \   ?publication1 dc:creator ?coauthor . (tp1) \   ?coauthor foaf:name "Etienne Vermeersch". (tp2) \   ?coauthor foaf:name ?coauthorName . (tp3) \   XOR { \   ?publication2 dc:creator ?coauthor .  (tp4) \   ?coauthor   foaf:name "Freddy Mortier". (tp5) \   ?coauthor foaf:name ?coauthorName. (tp6) } }       |   |          |       |
| Q26 | SELECT distinct ?license  WHERE { \   ?ontology a owl:Ontology . (tp1) \   ?ontology  dc:license ?license. (tp2) } |    |          |      |
| Q27 | SELECT ?entity ?label ?comment  WHERE { \   ?entity a dbpedia-owl:MythologicalFigure . (tp1) \   ?entity  rdfs:label ?label . (tp2) \   ?entity dc:subject  dbpedia-cat:Women_in_Greek_mythology . (tp3) \   ?entity rdfs:comment ?comment . (tp4) \      FILTER(langMatches(lang(?label), "EN")) \      FILTER(langMatches(lang(?comment), "EN")) }         |    |      |      |
| Q28  | SELECT ?name ?work ?title WHERE { \   ?artist dbpedia-owl:movement ?movement . (tp1) \   ?movement rdfs:label "Cubism"@en . (tp2) \   ?artist foaf:name ?name . (tp3) \   ?work schema:author ?author . (tp4) \   ?author schema:sameAs ?artist . (tp5) \   ?work schema:name ?title . (tp6) \      FILTER (!REGEX(?name, ",")) }        |     |           |       |
| Q29  | SELECT DISTINCT ?subject ?label WHERE { \   { ?subject dc:title ?label  (tp1) } \   UNION \   { ?subject rdfs:label ?label  (tp2) } } \   LIMIT 100         |    |         |     |
| Q30  | SELECT DISTINCT ?type ?label WHERE { \   ?s a ?type . (tp1) \   OPTIONAL { ?type rdfs:label ?label . (tp2)} \      FILTER LANGMATCHES(LANG(?label), "EN")  } \   LIMIT 100        |     |   |     |


## Top 15 most frequent deduced bgps

In this page, we present LIFT's deduced BGPs using as input traces of the real log of DBpedia, as regenerated with its answers.

| Frequency  | Deduced BGP                                                |
| -----------|:----------------------------------------------------------:|
| 125        | ?s1 http://www.w3.org/2000/01/rdf-schema#label "Brad Pitt"@en . ?s2 http://dbpedia.org/ontology/starring ?s1 . ?s2 http://www.w3.org/2000/01/rdf-schema#label ?o3 . ?s2 http://dbpedia.org/ontology/director ?o3 . ?o3 http://www.w3.org/2000/01/rdf-schema#label ?o5 |
| 45        | ?s1 http://www.w3.org/2000/01/rdf-schema#label "Brad Pitt"@en . ?s2 http://dbpedia.org/property/starring ?s1 . ?s2 http://www.w3.org/2000/01/rdf-schema#label ?o3 . ?s2 http://dbpedia.org/ontology/director ?o3 . ?o3 http://www.w3.org/2000/01/rdf-schema#label ?o5 |
| 43        | ?s1 http://www.w3.org/2000/01/rdf-schema#label "York"@en . ?s2 http://dbpedia.org/ontology/birthPlace ?s1 . ?s2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://dbpedia.org/ontology/Artist |
| 33        | ?s1 http://dbpedia.org/property/cityServed http://dbpedia.org/resource/Italy. ?s2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://dbpedia.org/ontology/Airport |
| 31        | ?s1 http://dbpedia.org/ontology/influencedBy http://dbpedia.org/resource/Pablo_Picasso . ?s1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://dbpedia.org/ontology/Artist . ?s1 http://dbpedia.org/ontology/birthDate ?o3 |
| 20        | http://dbpedia.org/ontology/Agent http://www.w3.org/2000/01/rdf-schema#subClassOf ?o1 . ?o1 http://www.w3.org/2000/01/rdf-schema#subClassOf ?o2 |
| 17        | http://dbpedia.org/ontology/Activity http://www.w3.org/2000/01/rdf-schema#subClassOf ?o1 . ?o1 http://www.w3.org/2000/01/rdf-schema#subClassOf ?o2 |
| 16        | ?s1 http://www.w3.org/2000/01/rdf-schema#label "Trinity College, Dublin"@en . ?s2 http://dbpedia.org/ontology/almaMater ?s1 . ?s2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://dbpedia.org/ontology/Writer |
| 14        |  ?s1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://dbpedia.org/ontology/Book . ?s1 http://dbpedia.org/ontology/author ?o2 |
| 12        |  ?s1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://dbpedia.org/class/yago/PeopleExecutedByCrucifixion . ?s1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://dbpedia.org/class/yago/Carpenters |
| 11        |  ?s1 http://dbpedia.org/ontology/ingredient ?o1 . ?s1 http://dbpedia.org/ontology/kingdom  http://dbpedia.org/ressource/Plant |
| 11        |  ?s1 http://dbpedia.org/ontology/birthPlace http://dbpedia.org/resource/Úrbel_del_Castillo . ?s1 http://dbpedia.org/ontology/team ?o2 |
| 10        |  ?s1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://xmlns.com/foaf/0.1/Person . ?s1 http://xmlns.com/foaf/0.1/isPrimaryTopicOf ?o2 |
| 10        |  ?s1 http://dbpedia.org/ontology/type http://dbpedia.org/resource/Dessert . ?s1 http://dbpedia.org/ontology/ingredient ?o1 . ?o1 http://dbpedia.org/ontology/kingdom http://dbpedia.org/ressource/Plant |
| 8         |  http://dbpedia.org/resource/Raspberry_Pi http://dbpedia.org/ontology/operatingSystem ?o1 .  ?s1 http://dbpedia.org/ontology/operatingSystem ?o1 . ?s1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://dbpedia.org/ontology/Device |


## Recall and precision plots

In the next two Figures, we view recall and precision of joins, per query executed in isolation.

![GitHub Logo](https://github.com/coumbaya/lift/blob/master/plots/precision_joins_client_ldf_per_query.PNG)
![GitHub Logo](https://github.com/coumbaya/lift/blob/master/plots/precision_joins_client_ldf_per_query.PNG)

In the next two Figures, we view recall and precision of joins, per collection of queries executed in concurence.

![GitHub Logo](https://github.com/coumbaya/lift/blob/master/plots/precision_joins_client_ldf_per_query.PNG)
![GitHub Logo](https://github.com/coumbaya/lift/blob/master/plots/precision_joins_client_ldf_per_query.PNG)



## Appendix: general information

In this section, we illustrate which queries are executable per dataset, and also present a table matching each IRI's authority to its corresponding prefix.

### Executed queries per dataset

In the table below, we see which queries correspond to every dataset, representing a distinct data provider/LDF server entity.


| Dataset                                         | Queries               |
| ------------------------------------------------|:---------------------:|
| DBpedia 2015-04                                 | Q1, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q19, Q20, Q21, Q22, Q24, Q27, Q28, Q29, Q30 |
| Ghent University Academic bibliography (Ughent) | Q2, Q23, Q25, Q29, Q30 |
| Linked Open Vocabulairies (LOV)                 | Q17, Q18, Q26          |
| Virtual International Authority File (VIAF)     | Q29, Q29, Q30          |


**Note**: Q28 needs two datasets to be answered, DBpedia and VIAF.

### iri prefixes to authorities

Finally, we match each authority to a prefix for the corresponding datasets, as presented above.

| Prefix         | Authority                                                             |
| ---------------|:---------------------------------------------------------------------:|
| geo            | http://www.w3.org/2003/01/geo/wgs84_pos# |
| rdfs           | http://www.w3.org/2000/01/rdf-schema# |
| rdf            | http://www.w3.org/1999/02/22-rdf-syntax-ns# |
| owl            | http://www.w3.org/2002/07/owl# |
| skos           | http://www.w3.org/2004/02/skos/core# |
| xsd            | http://www.w3.org/2001/XMLSchema# |
| hydra          | http://www.w3.org/ns/hydra/core# |
| dc             | http://purl.org/dc/terms/ |
| dc11           | http://purl.org/dc/elements/1.1/ |
| dctitle        | http://purl.org/dc/terms/title |
| vann           | http://purl.org/vocab/vann/ |
| foaf           | http://xmlns.com/foaf/0.1/ |
| void           | http://rdfs.org/ns/void# |
| ugent          | http://lib.ugent.be/classification/classification |
| schema         | http://schema.org/sameAs |
| dbpedia        | http://dbpedia.org/resource/ |
| dbpedia-owl    | http://dbpedia.org/ontology/> |
| dbpprop        | http://dbpedia.org/property/ |
| dbpclass       | http://dbpedia.org/class/yago/ |
| dbpedia-cat    | http://dbpedia.org/resource/Category |
| ugent-biblio   | http://data.linkeddatafragments.org/.well-known/genid/ugent-biblio/ |

